demo()
demo(error.catching)
demo(Hershey)
demo(error.catching)
demo(graphics)
install.packages("KernSmooth")
load(KernSmooth)
library(KernSmooth)
demo()
help()
demo()
demo(image)
demo(image)
install.packages("swirl")
load(swirl)
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x<- 5+7
x
y<-x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1:4) + c(0,10)
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
Type: boring_function('My first function!')
boring_function('My first function!')
boring_function
submit()
submit()
submit()
my_mean(c(4,5,10))
submit()
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd,1.4,3.6,7.9,8.8)
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Querido", "Davi", "amo", "voce", "beijos", "Papai")
submit()
mad_libs(place="Recife", adjective="pretty", noun="bus" )
submit()
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
source('~/Dropbox/Data_Science_Projects/R_Functions/makeVector.R')
source('~/Dropbox/Data_Science_Projects/R_Functions/cachemean.R')
args(makeVector)
x <- c(1:10)
x
makeVector(x)
?`<<-`
source('~/Dropbox/Data_Science_Projects/R_Functions/makeVector.R')
makeVector()
p<-makeVector()
class(p)
names(p)
p$set()
p$set(3)
p$get(8)
p$get()
p$setmean(5)
p$getmean(5)
p$getmean()
args(cachemean)
cachemean(p)
p<-makeVector(c(1:10))
cachemean(p)
p$getmean()
p<-makeVector(c(1:100))
cachemean(p)
p$getmean()
cachemean(p)
cachemean(p)
cachemean(p)
cachemean(p)
?matrix
matrix(c(1:20),5,4)
p<-matrix(c(1:20),5,4)
p
source('~/Desktop/ProgrammingAssignment2-master/cachematrix.R')
makeCacheMatrix(p)
p<-makeCacheMatrix(matrix(c(1:20),5,4))
cacheSolve(p)
p<-makeCacheMatrix(matrix(c(1:25),5,5))
cacheSolve(p)
p<-makeCacheMatrix(matrix(c(1, 2, 3, 2, 3, 4, 3, 4, 0),3,3))
p
cacheSolve(p)
cacheSolve(p)
cacheSolve(p)
p<-makeCacheMatrix(matrix(c(1, 0, 3, 2, 3, 4, 3, 4, 0),3,3))
cacheSolve(p)
cacheSolve(p)
source('~/Desktop/ProgrammingAssignment2-master/cachematrix.R')
p<-makeCacheMatrix(matrix(c(1, 0, 3, 2, 3, 4, 3, 4, 0),3,3))
cacheSolve(p)
cacheSolve(p)
p<-makeCacheMatrix(matrix(c(1, 2, 3, 2, 3, 4, 3, 4, 0),3,3))
cacheSolve(p)
cacheSolve(p)
source('~/datasciencecoursera/ProgrammingAssignment2-master/cachematrix.R')
p<-makeCacheMatrix(matrix(c(1, 2, 3, 2, 3, 4, 3, 4, 0),3,3))
cacheSolve(p)
cacheSolve(p)
p<-makeCacheMatrix(matrix(c(1, 0, 3, 2, 3, 4, 3, 4, 0),3,3))
cacheSolve(p)
cacheSolve(p)
install.packages("httr")
library("httr")
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf"
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library("httpuv")
install.packages("httpuv")
library("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
swirl()
library(swirl)
rm(list=ls())
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package(cran,package
)
by_package<-group_by(cran,package)
by_package
?sumarize
?summarize
summarize(by_package)
summarize(by_package,mean(size))
?n
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum,count>679)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,counts)
top_counts_sorted<-arrange(top_counts,count)
top_counts_sorted<-arrange(top_counts,desc(count)
)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_counts<-filter(pack_sum,unique>465)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_counts_sorted<-arrange(top_unique,desc(unique))
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res<-gather(students2,key="sex_class",value= "count")
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class, c("sex","class"))
submit()
submit()
submit()
submit()
submit()
students3
?gather
submit()
?spread
reset()
swirl()
submit()
submit()
library(readr)
parse_number("class5")
submit()
students4
submit
submit()
submit()
submit()
passed
failed
passed<-mutate(passed,"status"="passed")
failed<-mutate(failed,"status"="failed")
bind_rows(passed,failed)
sat
?select
submit()
submit()
submit()
submit()
?separate
submit()
submit()
submit()
0.9^10
e
exp(1)
exp(1)^(-12.8)
*2
2*exp(1)^(-12.8)
source('~/datasciencecoursera/Getting and Cleaning Data/Project/run_analysis.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_dataset.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
dataclean2
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
mtcars
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
names(dataclean2)
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
mtcars
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
mtcars
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
source('~/testing.R')
rm(list=ls())
mtcars
mtcars<-tbl_df(mtcars)
mtcars
group_by(mtcars,cyl)
t<-group_by(mtcars,cyl)
summarize(t,disp=mean(disp))
summarize(t,disp=mean(disp),hp=mean(hp))
summarize(t,disp=mean(disp),hp=mean(hp),qsec=mean(qseq))
summarize(t,disp=mean(disp),hp=mean(hp),qsec=mean(qsec))
t<-group_by(mtcars,cyl,gears)
t<-group_by(mtcars,cyl,gear)
t
summarize(t,disp=mean(disp),hp=mean(hp),qsec=mean(qsec))
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
dataclean
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_dataset.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/run_analysis.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_dataset.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
names(dataclean)
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
names(dataclean)
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
?summarize_all
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/run_analysis.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_dataset.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
class(dataclean2)
unclass(dataclean2)
class(dataclean2)
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
dataclean3
dim(dataclean3)
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
names(dataclean2)
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/cleaning_names.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/run_analysis.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/run_analysis.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/run_analysis.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/run_analysis.R')
str(dataclean)
names(dataclean)
names(transpose(dataclean))
names(dataclean)
source('~/datasciencecoursera/Getting and Cleaning Data/Project/run_analysis.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/run_analysis.R')
getwd
getwd()
setwd("~/datasciencecoursera/Getting and Cleaning Data/Project")
source('~/datasciencecoursera/Getting and Cleaning Data/Project/run_analysis.R')
names(dataclean)
unique(dataclean$activity)
str(dataclean)
str(dataclean2)
source('~/datasciencecoursera/Getting and Cleaning Data/Project/run_analysis.R')
source('~/datasciencecoursera/Getting and Cleaning Data/Project/run_analysis.R')
